/* 
 * uos-mf-api-controller
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// PlaySceneTheme
    /// </summary>
    [DataContract]
    public partial class PlaySceneTheme :  IEquatable<PlaySceneTheme>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PlaySceneTheme" /> class.
        /// </summary>
        /// <param name="RoomId">RoomId.</param>
        /// <param name="SceneTheme">SceneTheme.</param>
        public PlaySceneTheme(string RoomId = default(string), SceneTheme SceneTheme = default(SceneTheme))
        {
            this.RoomId = RoomId;
            this.SceneTheme = SceneTheme;
        }
        
        /// <summary>
        /// Gets or Sets RoomId
        /// </summary>
        [DataMember(Name="roomId", EmitDefaultValue=false)]
        public string RoomId { get; set; }

        /// <summary>
        /// Gets or Sets SceneTheme
        /// </summary>
        [DataMember(Name="sceneTheme", EmitDefaultValue=false)]
        public SceneTheme SceneTheme { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PlaySceneTheme {\n");
            sb.Append("  RoomId: ").Append(RoomId).Append("\n");
            sb.Append("  SceneTheme: ").Append(SceneTheme).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as PlaySceneTheme);
        }

        /// <summary>
        /// Returns true if PlaySceneTheme instances are equal
        /// </summary>
        /// <param name="other">Instance of PlaySceneTheme to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PlaySceneTheme other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.RoomId == other.RoomId ||
                    this.RoomId != null &&
                    this.RoomId.Equals(other.RoomId)
                ) && 
                (
                    this.SceneTheme == other.SceneTheme ||
                    this.SceneTheme != null &&
                    this.SceneTheme.Equals(other.SceneTheme)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.RoomId != null)
                    hash = hash * 59 + this.RoomId.GetHashCode();
                if (this.SceneTheme != null)
                    hash = hash * 59 + this.SceneTheme.GetHashCode();
                return hash;
            }
        }
    }

}
